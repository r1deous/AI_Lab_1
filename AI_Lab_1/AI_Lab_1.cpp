#include <iostream>
#include <vector>
#include <string>

using namespace std;

const int LINE = 100;
const int COLUMN = 9;

void ADD(int omega[], int main_selection[]) {
	for (int i = 0; i < COLUMN; i++) {
		if (main_selection[i] == 1) {
			omega[i]++;
		}
	}
	//cout << "+" << endl;
}

void SUB(int omega[], int main_selection[]) {
	for (int i = 0; i < COLUMN; i++) {
		if (main_selection[i] == 1) {
			omega[i]--;
		}
	}
	//cout << "-" << endl;
}

int main() {

	setlocale(LC_ALL, "rus");
	//код Иванов Данила

	int omega[COLUMN + 1] = { 0, 2, 3, 5, 8, 4, 6, 0, 2, 0 }; //омега
	int MAIN_SELECTOIN[LINE][COLUMN + 1] = { //выборкa
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{7,  0, 1, 1, 0, 0, 1, 0, 0, 0 },
		{3,  0, 1, 1, 0, 1, 0, 1, 0, 0 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{9,  1, 1, 0, 1, 1, 0, 1, 0, 0 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{6,  0, 0, 1, 0, 1, 1, 0, 1, 1 },
		{0,  1, 1, 0, 1, 0, 1, 0, 1, 1 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{1,  0, 0, 1, 1, 0, 0, 0, 1, 0 },
		{4,  1, 0, 0, 1, 1, 0, 0, 1, 0 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
		{5,  1, 1, 0, 0, 1, 0, 0, 1, 1 },
		{8,  1, 1, 0, 1, 1, 1, 0, 1, 1 },
		{2,  0, 1, 0, 1, 0, 0, 1, 0, 1 },
	};

	int test_main[10][COLUMN + 1] = {
		{0, 1,1,0,1,0,1,0,1,1},
		{1, 0,0,1,1,0,0,0,1,0},
		{2, 0,1,0,1,0,0,1,0,1},
		{3, 0,1,1,0,1,0,1,0,0},
		{4, 1,0,0,1,1,0,0,1,0},
		{5, 1,1,0,0,1,0,0,1,1},
		{6, 0,0,1,0,1,1,0,1,1},
		{7, 0,1,1,0,0,1,0,0,0},
		{8, 1,1,0,1,1,1,0,1,1},
		{9, 1,1,0,1,1,0,1,0,0},
	};

	int teta = 0;
	int point = 0;
	bool end_flag = false;
	int weight = 0;

	int temp_mass[COLUMN + 1];

	cout << "Введите Тэту: "; cin >> teta; cout << endl;
	cout << "Распознание цифры 6" << endl; cout << endl;

	cout << "Исходные веса: | ";
	for (int i = 0; i < COLUMN; i++) {
		cout << omega[i] << " | ";
	}cout << endl;

check:
	for (point = 0; point < LINE; point++) {
		for (int i = 1; i < COLUMN + 1; i++) {
			weight += MAIN_SELECTOIN[point][i] * omega[i];
			temp_mass[i] = MAIN_SELECTOIN[point][i];
		}

		if (weight > teta and MAIN_SELECTOIN[point][0] == 6) {
			end_flag = true;
		}
		else if (weight <= teta and MAIN_SELECTOIN[point][0] == 6) {
			ADD(omega, temp_mass);
			end_flag = false;
		}
		else if (weight > teta and MAIN_SELECTOIN[point][0] != 6) {
			SUB(omega, temp_mass);
			end_flag = false;
		}
		//cout << "Цифра: " << MAIN_SELECTOIN[point][0] << " => Сумма весов: " << weight <<endl;
		weight = 0;
	}
	if (end_flag == true) {
		cout << endl;
		cout << "Нейрон обучился" << endl;
		cout << "Полученные веса: | ";
		for (int i = 0; i < COLUMN; i++) {
			cout << omega[i] << " | ";
		}
		cout << endl;
	}
	else if (end_flag == false) {
		goto check;
	}
	cout << endl;
	for (int point = 0; point < 10; point++) {
		for (int i = 1; i < COLUMN + 1; i++) {
			weight += test_main[point][i] * omega[i];
		}
		cout << "Цифра: " << test_main[point][0] << " => Сумма весов: " << weight << endl;
		weight = 0;
	}

}